import subprocess
from subprocess import check_output

##Credits - Adapted from github/bin2op
## Function receives a file and reads the dis-assemebled data
## from the objdump command. Creates a list of all opcodes
def ListOpcodesfromObjDump(file):
    objdump = ['objdump', '-d', '-M', 'intel', file]
    opcodes = []

    #get the output of the objdump for given pe file
    try:
        lines = check_output(objdump, stderr=subprocess.DEVNULL)

        lines = lines.split(b'Disassembly of section')[1]
        #remove top 3 lines
        lines = lines.split(b'\n')[3:]

        for line in lines:
            line = line.strip()

            tabs = line.split(b'\t')
            if (len(tabs) < 3):
                continue

            instruction = "."
            #gets instrcution after 3rd tab, the first word only
            instruction = tabs[2].strip().decode("utf-8").split(' ')[0]
            if ("bad" in instruction or "." in instruction or "{" in instruction):
                continue

            opcodes.append(instruction)
    except Exception as error:
        print(f"\nException: {error}")

    return opcodes

## Function receives a file and reads the dis-assembled data
## from the objdump command, create a unique list of all opcodes
def ListUniqueOpcodesfromObjDump(file):
    opcodes = ListOpcodesfromObjDump(file)
    uniqueLst = list(set(opcodes))
    return uniqueLst

lods test
enter and
aad push
jnp push
jb adc
retf cmp
enter adc
std rep
test call
fadd mov
nop dec
rep cld
or scas
inc jl
pop std
fs and
shl and
adc ja
jns pop
outs jbe
movs dec
aam dec
jo or
shl sub
jge dec
cmps adc
dec jns
imul lea
loopne dec
jo je
pop int3
js or
ja lea
inc cs
jge pop
inc je
ror xor
leave xchg
movs sbb
aam adc
jb or
pop aas
scas adc
pop ss
scas cmp
lods sbb
fwait push
in ret
or enter
adc cmps
cmp scas
cld inc
popf push
cmp jo
pop pushf
xlat pop
cmps sbb
pop cld
xlat push
push jecxz
fs inc
push jg
sbb scas
les add
ja adc
or movs
push jbe
cmps xchg
jae call
or lods
pusha inc
loope push
imul sbb
jecxz push
adc jae
inc es
jbe inc
jbe dec
popa dec
pop popa
cmp retf
stos cmp
push clc
daa inc
push rcl
imul arpl
adc stos
movzx shr
push lock
pop jns
adc lods
js inc
or daa
movs cmp
sar dec
mov fadd
lods cmp
call movsx
enter cmp
ins test
outs cmp
sub cwde
cmp fnclex
pop pusha
jbe jb
stos xor
push les
inc aam
pop fs
outs jo
push loope
push int1
pushf pop
outs sbb
pop aam
cmps dec
repnz push
dec fadd
sbb shl
int1 push
inc pusha
call fld
cld jmp
adc nop
outs xchg
inc aaa
add sldt
pop daa
pop jl
cs push
jl test
movs xor
stos adc
lock xchg
sahf pop
sub scas
mul mov
adc scas
add ds
xor movs
sbb stos
popa jns
xchg shl
xchg nop
xor stos
inc cwde
outs addr16
dec js
add cmc
cmp arpl
adc enter
sti push
arpl and
pop jle
xor lods
sahf push
cli add
retf and
arpl pop
aas inc
and enter
enter xchg
cmc push
inc enter
add cli
push jnp
shl dec
push cs
dec jo
shl xor
xor daa
repz push
sbb cmps
cmp pusha
fs imul
test lea
cmps imul
adc ins
sbb movs
xor imul
sbb ret
push int
stos sbb
nop xor
push loop
pop cdq
fstp fstp
fs gs
adc outs
cmp imul
inc leave
jb dec
add std
ins jne
xor shr
popa fs
add les
dec scas
push std
data16 mov
shr shl
ja inc
daa dec
int3 cmp
push hlt
push jno
shl shr
int add
shl adc
inc ja
enter or
lods or
cli push
pusha pop
aam aam
fstp push
jg pop
addr16 mov
into push
push iret
jmp in
hlt push
cmp stos
dec cmps
push cmc
pop idiv
and sar
daa sub
aam inc
shl cmp
arpl jae
movs adc
bound push
push aad
enter pop
inc fs
neg pop
and retf
add popf
cdq xor
clc inc
in out
popa inc
outs ja
ins xchg
pusha and
pop loopne
xchg movs
scas or
out jmp
pop jo
loop push
ins jo
rep jmp
push fs
cmp jns
popa jae
and movzx
inc movs
cdq and
mov ds
das pop
pusha xchg
test sete
xchg stos
jo ins
jo popa
aaa push
rol cmp
imul adc
retf xchg
push cld
inc retf
lea je
push shr
je jo
push sti
and jl
lea shl
pusha pusha
pushf push
stos and
stos inc
daa and
scas and
sti call
arpl ins
bound dec
jge inc
movs and
clc pop
gs mov
mov ss
and jbe
xor je
inc cmps
push rol
rol inc
add stc
ja and
adc movs
lods dec
shl inc
add fiadd
or imul
ins cmp
outs popa
cwde and
cld push
xor shl
gs jb
push leave
adc ret
movs or
fld add
outs xor
lock push
ja xor
push aas
jae ins
dec ins
add int
push int3
and das
ins adc
jo jb
dec stos
outs adc
lea jne
add ror
fs dec
ds add
rol push
in jmp
jmp movsx
mov gs
dec movs
stos xchg
ja sub
call in
and jno
sub cdq
retf sbb
loop add
pop jae
cwde push
jb sub
shl xchg
xor leave
and bound
scas dec
cmp lods
or movzx
iret pop
call sbb
push fstp
call sti
je movsx
enter dec
in test
movs xchg
jns inc
scas inc
imul popa
push cli
sub ja
shr lea
and data16
inc lods
push jl
lods xchg
nop pop
pop arpl
add int1
adc daa
xchg scas
cmp ins
jbe xor
add ss
arpl imul
and jns
add repz
std push
stc push
js lea
push nop
and stos
sub daa
neg or
int1 add
popf add
sub shr
cmps inc
inc stos
jb jae
mov div
inc shl
push aaa
push cwde
dec enter
stos dec
jbe call
daa push
pop shl
pushf dec
pop nop
cdq int3
jne outs
out test
dec pusha
jb ins
jl and
aas push
nop lea
je je
mov addr16
and cmps
std add
imul jae
cmc add
loopne push
sub ins
iret inc
add loop
jae dec
or outs
jmp out
or shl
cmp call
sub jb
mov bound
arpl jb
ja dec
jb gs
shr sub
push jge
hlt add
jo inc
aam pop
repnz add
push fwait
repnz not
ret adc
jae xor
ja pop
push pushf
jb jns
popa imul
push xlat
inc cdq
das push
and nop
mov rcr
lods sub
repz add
scas xchg
clc call
ret sbb
fs mov
jl pop
ins sub
retf inc
ja jb
popa push
dec retf
fcomp fnstsw
pop ja
and movs
xchg lods
shl pop
inc js
jge xor
jae sub
ins or
add repnz
lds mov
push ja
add lds
jb jo
lea neg
xor ins
aad add
jne ins
or stos
sub jae
add sahf
push aam
test jmp
sub cmps
nop jmp
add rcl
bound mov
inc movzx
sbb call
and shr
xchg cmps
shr push
fwait add
pushf pushf
jb arpl
xor outs
push jp
cs add
imul xchg
mov rcl
ss mov
scas sub
nop xchg
fstp call
jae arpl
shr cmp
cli mov
mul add
clc push
not mov
nop sub
movsx sub
xchg retf
pop scas
sub stos
and ja
lods adc
cdq pop
call clc
sbb imul
sub imul
stc add
push enter
ss add
jae jb
xchg imul
mov fstp
iret push
add fwait
mov fild
sar cmp
movsx test
ror add
pusha push
enter push
sub shl
mov cli
rcl add
xchg outs
and fs
xor movzx
shr movzx
outs or
and jo
jl jmp
jae or
and scas
fild add
sub outs
xlat mov
sub lods
push daa
or lock
ds mov
add cs
add aad
mov popf
lods inc
test in
add fdiv
jae pop
push js
cmp outs
imul xor
jo pop
pop cmps
jbe lea
je gs
rcr mov
movs call
add hlt
sar add
shr xor
ret dec
jno push
push pusha
jo imul
sahf mov
ja call
setne mov
daa lods
jb je
repz mov
sbb neg
add into
shr test
add fld
push loopne
imul sub
lock dec
mov les
xchg call
ret sub
pop jbe
lods and
mov ror
mov cmc
cdq push
fld mov
mov idiv
popf mov
int3 sub
jp push
sub movs
aad mov
fs push
fld fld
jae popa
jecxz mov
leave push
add sti
ret and
mov lds
mov lahf
outs pop
es mov
jg push
leave add
addr16 add
stc mov
cmc dec
pop outs
hlt mov
push shl
adc imul
mov fs
or ret
mov cs
mov sti
mov jp
leave mov
retf pop
jns dec
fdiv add
cs mov
fcom add
push jns
and rep
jge cmp
gs inc
adc call
jae movzx
les mov
call adc
movs inc
add shr
mov aad
aam push
fld fmul
pop retf
add es
inc jne
mov es
lahf mov
mov loope
cmps cmps
rcl rcl
dec ret
or ins
nop inc
sti mov
shr rep
xchg ret
jg je
mov stc
movzx inc
xor div
add movsx
sub out
test out
rcl mov
pop stos
lea movzx
cwde mov
add lahf
pop movs
jae outs
imul gs
cdq sub
add fcom
xchg ins
jle lea
pop lods
call neg
ret or
push das
idiv mov
jge jge
lea rep
ror mov
cmc mov
sahf add
sar and
push arpl
jl xor
mov jnp
mov jecxz
jae imul
mov int3
mov hlt
popa and
fadd push
push jae
dec cmc
imul ins
push jo
call xchg
lahf add
sar lea
test setne
fadd xor
ins dec
ins pop
fnclex test
mov jno
mov into
out sbb
into add
lods pop
jb jb
ja jmp
movzx or
loop mov
jl lea
outs dec
jo push
add pushf
push cmps
pop jb
js cmp
int1 mov
fstp mov
shl lea
int3 jmp
xchg jmp
fnclex mov
sbb jmp
cld add
clc add
mov loop
jb inc
imul or
test test
ret pop
and daa
mov repnz
jne jb
je popa
movzx lea
xor out
loope add
and ret
clc mov
mov aas
sub ret
pop enter
add shl
imul cmp
jp mov
cmp in
jae inc
loope mov
dec shl
mov js
jb call
mov repz
dec popa
mov arpl
gs je
mov pushf
sti add
dec imul
scas push
and lods
inc scas
xor in
in adc
out in
or out
xor cs
jecxz add
es add
mov int1
mov xlat
jmp sbb
add cld
mov int
int3 inc
stos pop
in sbb
mov std
into mov
mov popa
das mov
mov clc
pop ins
outs jne
in in
fld fstp
sub call
aas mov
pushf mov
jo outs
mov jg
out or
mov fwait
jno mov
arpl mov
inc popa
ret xchg
jb xor
sbb out
repnz mov
jnp mov
jl inc
jo jo
cmps pop
in or
popa mov
add addr16
gs push
scas pop
push retf
pushf add
jb lea
and arpl
jb pop
mov pusha
lea xchg
push cdq
int3 add
gs gs
arpl inc
ins popa
mov cwde
js push
xor arpl
ret inc
mov lock
and out
add sar
add jecxz
cmp test
lea stos
jle and
adc jmp
mov iret
ins imul
fwait mov
out cmp
cmps push
jne je
mov sahf
out sub
dec call
aaa mov
std mov
jb jmp
add loope
add enter
neg mov
xchg lea
add fcomp
gs popa
mov aaa
outs sub
fnstsw test
jns mov
mov das
mov jo
pop imul
imul je
shr or
mov cld
retf push
popa jb
jmp adc
dec in
jp jp
in xor
mov fld
in cmp
dec lea
int mov
outs jae
mov not
add cdq
enter add
sub in
mov rol
gs and
outs imul
out and
cdq idiv
push stos
sete mov
jne dec
push scas
mov loopne
adc out
jo mov
cmp out
or in
lock mov
je jae
in and
add leave
loopne add
pusha mov
lea or
jbe popa
test jbe
rol mov
add cwde
nop add
sar push
jno add
div mov
add gs
fadd fadd
imul pop
add int3
lea movs
iret mov
jge add
je ins
add clc
push movs
cs ins
adc in
cld mov
and shl
fcomp add
mov jge
or call
out xor
test xor
in sub
sbb in
data16 data16
jg cmp
add jg
add xlat
jmp xchg
add jge
and in
cmp jmp
in xchg
je pop
jae je
loopne mov
ret test
test sbb
imul dec
cdq add
add fild
lea dec
out adc
movzx and
movsx push
push jb
daa mov
imul jb
movzx xor
ins gs
arpl push
cdq mov
movs pop
in dec
lods push
movs push
mov enter
out xchg
arpl outs
jmp ret
and ins
mov aam
mov jns
cwde add
inc jb
and jne
add nop
dec gs
xchg in
test adc
and jae
inc ins
aam mov
push lods
movsx cmp
jg add
ja push
jns and
jb and
add jno
push ins
and gs
lea inc
add loopne
inc lea
xlat add
jb popa
mov ja
ins inc
imul imul
or jne
jp add
dec jmp
lea and
shr add
test sub
mov rep
movzx jmp
inc ret
movsx mov
xchg test
ins and
ja cmp
inc gs
test and
test or
sbb test
ret ret
add pusha
outs inc
enter mov
popa outs
jae cmp
push jne
gs outs
test cmp
add aas
movzx shl
mov nop
pop out
shl push
not and
movdqa movdqa
test fnclex
add jp
add lock
mov jle
pop in
out pop
mov retf
push popa
test xchg
ins ins
adc test
pusha add
inc call
outs push
out dec
add aaa
call dec
jbe cmp
je imul
add bound
inc imul
ins push
add jnp
in pop
lock add
mov mul
outs jb
movzx add
sbb cmp
stos push
je jb
scas mov
and popa
inc out
add movzx
aas add
outs arpl
jle add
jns add
out out
xchg out
outs ins
popa ins
inc in
jbe add
sbb sub
test dec
add fs
popa je
ins outs
jnp add
fadd add
retf mov
mov jl
dec out
jle cmp
out inc
jmp dec
aaa add
test inc
movzx test
bound add
jl add
mov jae
outs fs
sub test
outs and
add jl
shr and
add retf
cmp setne
mov stos
in inc
mov ins
and imul
jmp movzx
ins mov
mov scas
mov cmps
jae push
movs mov
retf add
mov jb
cmps mov
mov jbe
push gs
imul outs
jae lea
outs mov
gs add
cmp adc
push ret
xor sbb
call fnclex
and call
cmp xchg
call int3
jbe push
fnclex jge
add jle
and jb
cmp lea
lods mov
push out
inc outs
imul inc
or je
mov outs
or sbb
push imul
mov daa
push outs
fstp fld
jl push
cmp sbb
xor adc
mov lods
adc cmp
dec outs
rol add
cmp sete
jle push
gs imul
cmp sub
add jbe
int3 lea
cmp xor
sbb xor
sub jne
sub sbb
mov movs
adc sub
stos mov
cmp dec
mov neg
jb imul
xchg xor
test jg
imul push
sbb xchg
jne and
out push
fs add
xor xchg
jmp inc
jae and
push je
push in
ja add
sub xchg
call movzx
cmp or
arpl arpl
jb outs
xchg cmp
adc xor
add js
in push
and sbb
ret call
lea xor
sbb adc
xchg sub
push movzx
call leave
js mov
or xor
dec sbb
xchg sbb
add cmps
rep mov
lea sub
stos stos
js add
adc or
jmp pop
sbb or
add movs
adc and
or xchg
sbb dec
data16 add
imul and
jmp sub
shl or
je outs
jae add
inc sbb
movs add
sar mov
xchg and
adc xchg
dec test
add data16
mov movsx
or cmp
or sub
cmp cmp
adc dec
jne sub
sub xor
sbb sbb
and jmp
pop lea
lea pop
or adc
and test
jmp nop
sub adc
mov cdq
adc sbb
jmp and
add rol
jb push
add jns
cmps add
xchg adc
cmp inc
sbb and
and adc
xor sub
cmp and
outs je
dec adc
jo add
dec or
add jne
mov leave
xor ret
pop sbb
xchg or
add ja
movzx cmp
xor dec
add iret
ret jmp
call inc
dec xchg
inc adc
and outs
and xchg
sub jmp
ja mov
xor or
xor and
add scas
aam add
and je
push test
sub sar
sbb pop
adc inc
shl add
sub dec
pop or
sub or
ret xor
adc pop
dec sub
xchg dec
mov sar
dec and
ret add
inc or
je jmp
jne jmp
inc xchg
or test
lea add
dec xor
pop sub
add stos
test jge
jns push
sub inc
add aam
outs outs
jl cmp
pop xchg
test push
iret add
add das
ret cmp
inc sub
je movzx
sbb inc
imul mov
sub lea
and xor
or dec
shr mov
jne pop
inc xor
out mov
jne inc
xchg inc
add out
or inc
dec cmp
xchg pop
daa daa
or lea
lea test
jg mov
scas add
sub pop
or and
jmp or
pop adc
in mov
je and
movs movs
setg lea
call sub
mov out
inc test
sub and
test setg
jb add
test jl
out add
shl mov
add in
in add
das add
and lea
xor lea
jb cmp
stos add
test jle
jne movzx
arpl add
mov in
or pop
test js
and sub
pop dec
add jo
neg sbb
jmp add
jne or
add fadd
push sbb
je or
test jns
add arpl
jmp call
jne add
add jb
xchg xchg
and pop
sbb push
inc and
or or
and dec
mov imul
pop and
dec je
dec pop
and or
add popa
test add
movzx sub
push adc
movzx push
pop call
jbe mov
nop mov
adc push
push cmp
push xchg
push or
jmp test
je inc
rol rol
and inc
call or
xchg push
or push
pop je
ret lea
adc adc
add lods
pop jne
jge push
and cmp
jne test
dec jne
cmp jg
add imul
inc jmp
add jae
jmp int3
lods add
je call
jle mov
jge mov
push sub
sub cmp
push and
cmp push
je add
nop push
cmp pop
jl mov
jae mov
movzx movzx
imul add
call and
je sub
sub sub
pop inc
sbb add
cmp add
add call
inc pop
je dec
pop xor
jne lea
mov shl
or jmp
pop cmp
mov sbb
sbb mov
add sbb
xchg add
add ret
add ins
popa add
cmp jle
movzx mov
xor xor
add xchg
mov adc
add je
inc dec
pop jmp
jmp jmp
jb mov
call call
add lea
dec push
cmp jge
xor inc
dec inc
lea cmp
push dec
xor add
mov jne
adc mov
pop test
test mov
and push
jne xor
add outs
xor test
je xor
pop leave
cmp jbe
mov shr
mov movzx
cmp ja
jne call
je lea
je test
add xor
ret nop
xchg mov
xor call
ins add
inc cmp
sub je
test pop
adc add
add daa
xor jmp
mov xchg
cmp jl
dec dec
daa add
add adc
int3 mov
push inc
mov ret
int3 push
or add
pop push
dec mov
mov or
lea lea
mov je
jmp xor
add or
cmp jae
call xor
inc push
mov dec
call ret
push xor
push jmp
add jmp
xor cmp
sub add
outs add
and add
or mov
sub push
xor push
add sub
xor pop
jne cmp
inc mov
add test
leave ret
add pop
push pop
jmp cmp
and mov
inc inc
lea jmp
call jmp
and and
cmp jb
ret int3
cmp mov
pop add
mov inc
add and
jmp lea
add cmp
add dec
call cmp
dec add
jne push
sub mov
jmp push
mov and
add inc
call lea
je cmp
push add
ret mov
add push
ret push
xor mov
mov sub
call test
nop nop
inc add
lea call
pop mov
je push
mov xor
call pop
test jne
jne mov
add mov
mov add
lea mov
mov lea
call add
call push
mov test
mov pop
pop ret
je mov
mov jmp
jmp mov
cmp jne
cmp je
test je
push lea
mov cmp
pop pop
lea push
mov call
call mov
mov push
push mov
int3 int3
push call
add add
push push
mov mov
